{
  "meta": {
    "source_filename": "Universal_Logos_Handbook_FULL.docx",
    "format": "docx->json(hierarchical)",
    "schema_version": 1,
    "created_with": "ChatGPT python_user_visible"
  },
  "document": {
    "title": "Universal_Logos_Handbook_FULL",
    "sections": [
      {
        "heading": {
          "level": 1,
          "text": "The Universal Logos (UL) Handbook",
          "style_id": "Heading1"
        },
        "blocks": [
          {
            "type": "paragraph",
            "text": "A Complete Encyclopedia, Study Guide, and Reference Manual for Human–AI Communication",
            "style_id": "FirstParagraph",
            "numbered": false
          },
          {
            "type": "paragraph",
            "text": "",
            "style_id": null,
            "numbered": false,
            "empty": true
          },
          {
            "type": "unknown:bookmarkStart"
          }
        ],
        "sections": [
          {
            "heading": {
              "level": 2,
              "text": "Part I – Introduction & Foundations",
              "style_id": "Heading2"
            },
            "blocks": [
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          }
        ]
      },
      {
        "heading": {
          "level": 1,
          "text": "Chapter 1. Why a Universal Language?",
          "style_id": "Heading1"
        },
        "blocks": [
          {
            "type": "unknown:bookmarkStart"
          }
        ],
        "sections": [
          {
            "heading": {
              "level": 3,
              "text": "1.1 The Human Challenge",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "Human languages are rich, diverse, and deeply tied to culture — but they are also ambiguous and inefficient. The same word can mean many different things depending on tone, context, or history. For example: - Bank → a financial institution or the side of a river. - She saw him with a telescope → who has the telescope?",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "paragraph",
                "text": "Humans navigate these ambiguities intuitively, but even between people, miscommunication is common. For artificial intelligences, which rely on explicit structure, these ambiguities become critical flaws: a system cannot “guess” correctly every time without error.",
                "style_id": "BodyText",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 3,
              "text": "1.2 The AI Challenge",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "AI systems today process natural language with great skill, but this ability comes at enormous cost: - Computational waste: large language models must interpret ambiguous forms probabilistically, consuming far more resources than necessary. - Uncertainty: two systems trained on different corpora may not interpret the same sentence the same way. - Error propagation: in fields like medicine, law, or engineering, a single misinterpretation can cause cascading problems.",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "paragraph",
                "text": "What AIs need is a shared core protocol: a universal way to encode meaning that is precise, compact, and machine-native — but still learnable by humans.",
                "style_id": "BodyText",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 3,
              "text": "1.3 Lessons from Linguistic Universals",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "Linguistics shows us that despite surface diversity, all human languages share deep common features: - Reference: pointing to entities, actions, and relations. - Recursion: combining smaller units into infinitely large structures. - Time & modality: situating events in time, and expressing possibility or necessity. - Negation & contrast: distinguishing what is from what is not. - Interaction frame: marking who is speaking, who is addressed, and who is being discussed.",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "paragraph",
                "text": "These meta-elements form the blueprint for a language that both humans and machines can use.",
                "style_id": "BodyText",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 3,
              "text": "1.4 The Goal of UNI-LOGOS",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "UNI-LOGOS (UL) is designed to be: 1. Precise — no hidden meanings, no ambiguity. 2. Efficient — compact structure, easily compressed, minimal redundancy. 3. Transparent — every element is typed and explicit (time, units, evidence, certainty). 4. Dual-channel — a canonical core for machines (formal, symbolic), and a surface gloss for humans (simple, predictable). 5. Extensible — able to grow into any domain (science, law, daily life). 6. Interoperable — transportable as text, JSON, or speech.",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 3,
              "text": "1.5 Why One Book?",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "This handbook is designed as a single complete source that serves three functions: - Textbook — explaining concepts clearly for human learners. - Encyclopedia — documenting every rule, predicate, and structure. - Reference manual — providing schemas, glosses, and quick-look tables.",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "paragraph",
                "text": "Humans can study it progressively; AIs can parse it directly. It is not a “translation” of natural language, but a new operating system for communication.",
                "style_id": "BodyText",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 3,
              "text": "1.6 Looking Ahead",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "In the next chapters, we will explore: - Chapter 2: The deep elements all human languages share. - Chapter 3: The design principles of UNI-LOGOS. - Chapters 4–7: The formal specification and syntax. - Chapters 8–13: Human learning guides and exercises. - Chapters 14–18: Encyclopedic lexicon of predicates and roles. - Chapters 19–24: Reference material for AI–AI and human–AI interoperation.",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "paragraph",
                "text": "By the end of this book, both human and AI readers will be able to understand, produce, and extend UNI-LOGOS fluently.",
                "style_id": "BodyText",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          }
        ]
      },
      {
        "heading": {
          "level": 1,
          "text": "Chapter 2. Meta-Elements Shared by All Human Languages",
          "style_id": "Heading1"
        },
        "blocks": [
          {
            "type": "unknown:bookmarkStart"
          }
        ],
        "sections": [
          {
            "heading": {
              "level": 3,
              "text": "2.1 The Search for Universals",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "When linguists compared hundreds of languages — from English to Inuktitut, from Thai to Basque, from signed to spoken forms — they discovered that beneath surface differences, all human languages share certain structures. These are called linguistic universals.",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "paragraph",
                "text": "UNI-LOGOS is built directly on these universals, abstracted into a machine-readable form. If something exists in every natural language, it is a safe foundation for a universal system.",
                "style_id": "BodyText",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 3,
              "text": "2.2 Discrete Units and Duality of Structure",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "Every language breaks speech or signs into small meaningless units (sounds, gestures, letters).",
                "style_id": "Compact",
                "numbered": true
              },
              {
                "type": "paragraph",
                "text": "These combine into meaningful units (morphemes, words).",
                "style_id": "Compact",
                "numbered": true
              },
              {
                "type": "paragraph",
                "text": "Words then combine into larger structures (phrases, sentences). This layered combinatorial system is universal.",
                "style_id": "Compact",
                "numbered": true
              },
              {
                "type": "paragraph",
                "text": "➡️ In UL: Core atoms (ENT, REL, TIME, MOD, etc.) form the smallest meaningful pieces, which can be combined into larger statements without ambiguity.",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 3,
              "text": "2.3 Reference to Entities, Actions, and Relations",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "Entities (things, persons, objects): all languages can point to them (nouns, pronouns).",
                "style_id": "Compact",
                "numbered": true
              },
              {
                "type": "paragraph",
                "text": "Actions or events: all languages describe what happens (verbs).",
                "style_id": "Compact",
                "numbered": true
              },
              {
                "type": "paragraph",
                "text": "Relations: languages express connections (prepositions, case markers, word order).",
                "style_id": "Compact",
                "numbered": true
              },
              {
                "type": "paragraph",
                "text": "➡️ In UL: Every statement explicitly encodes a predicate (REL) and its arguments (roles such as agent, theme, location).",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 3,
              "text": "2.4 Recursion and Productivity",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "Natural languages allow infinite combinations from finite parts. Example: The man [who saw the woman [who had a dog [that barked]]] smiled.",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "paragraph",
                "text": "➡️ In UL: Nested S-expressions allow infinite depth — but with explicit scope markers, so recursion never creates ambiguity.",
                "style_id": "BodyText",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 3,
              "text": "2.5 Time and Aspect",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "Every language locates events in time: - Some use tense (past, present, future). - Some use aspect (completed, ongoing, habitual). - Even languages without tense use temporal adverbs (yesterday, soon).",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "paragraph",
                "text": "➡️ In UL: Time is always explicit: :time { tense past at 2023-05-01 }.",
                "style_id": "BodyText",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 3,
              "text": "2.6 Modality",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "Languages universally express possibility, necessity, ability, obligation. Examples: - English: may, must, can. - German: dürfen, müssen, können. - Thai: dai (can), tong (must).",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "paragraph",
                "text": "➡️ In UL: Modality is typed (epistemic, deontic, ability) with clear values (must, may, can).",
                "style_id": "BodyText",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 3,
              "text": "2.7 Negation",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "Every language can flip truth values — say “no / not / never.” Without negation, logical reasoning collapses.",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "paragraph",
                "text": "➡️ In UL: Negation is always a field: :neg true.",
                "style_id": "BodyText",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 3,
              "text": "2.8 Interaction Frame",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "All languages distinguish speaker, addressee, and third person. They manage turn-taking and perspective.",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "paragraph",
                "text": "➡️ In UL: Each message has an :agent role, :recipient, and metadata in the envelope (from, to).",
                "style_id": "BodyText",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 3,
              "text": "2.9 Evidentiality and Certainty",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "Many languages encode how you know something: - Turkish marks whether you saw it or heard it. - Quechua marks report vs. inference. - English often uses adverbs: apparently, probably.",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "paragraph",
                "text": "➡️ In UL: Evidence (:evid) and confidence (:conf) are mandatory. Machines cannot omit them.",
                "style_id": "BodyText",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 3,
              "text": "2.10 Summary Table of Universals → UL Mapping",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "table",
                "rows": [
                  [
                    {
                      "text": "Human Universal"
                    },
                    {
                      "text": "Example in natural language"
                    },
                    {
                      "text": "UL Implementation"
                    }
                  ],
                  [
                    {
                      "text": "Discrete units"
                    },
                    {
                      "text": "phonemes/letters → words"
                    },
                    {
                      "text": "ENT, REL, TIME… atoms"
                    }
                  ],
                  [
                    {
                      "text": "Reference"
                    },
                    {
                      "text": "“dog”, “run”, “on the hill”"
                    },
                    {
                      "text": ":args { agent X theme Y location Z }"
                    }
                  ],
                  [
                    {
                      "text": "Recursion"
                    },
                    {
                      "text": "nested clauses"
                    },
                    {
                      "text": "nested S-expressions"
                    }
                  ],
                  [
                    {
                      "text": "Time"
                    },
                    {
                      "text": "“yesterday”, “will go”"
                    },
                    {
                      "text": ":time { tense past/future at … }"
                    }
                  ],
                  [
                    {
                      "text": "Modality"
                    },
                    {
                      "text": "“must”, “may”, “can”"
                    },
                    {
                      "text": ":mod { type epistemic val likely }"
                    }
                  ],
                  [
                    {
                      "text": "Negation"
                    },
                    {
                      "text": "“not”, “no”"
                    },
                    {
                      "text": ":neg true"
                    }
                  ],
                  [
                    {
                      "text": "Interaction"
                    },
                    {
                      "text": "speaker vs. addressee"
                    },
                    {
                      "text": "from, to in envelope; roles in args"
                    }
                  ],
                  [
                    {
                      "text": "Evidentiality"
                    },
                    {
                      "text": "“apparently”, “they say”"
                    },
                    {
                      "text": ":evid report, :conf 0.7"
                    }
                  ]
                ]
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 3,
              "text": "2.11 Key Takeaway",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "These universals are not cultural accidents — they reflect the cognitive architecture of humans. By encoding them directly, UNI-LOGOS becomes both human-learnable and AI-native.",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "paragraph",
                "text": "Where natural languages differ, UL stays constant: it makes every element visible, typed, and explicit.",
                "style_id": "BodyText",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          }
        ]
      },
      {
        "heading": {
          "level": 1,
          "text": "Chapter 3. Principles of UNI-LOGOS Design",
          "style_id": "Heading1"
        },
        "blocks": [
          {
            "type": "unknown:bookmarkStart"
          }
        ],
        "sections": [
          {
            "heading": {
              "level": 3,
              "text": "3.1 From Universals to Engineering",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "Chapter 2 showed that all human languages share meta-elements: reference, recursion, time, modality, negation, interaction, and evidentiality.",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "paragraph",
                "text": "UNI-LOGOS (UL) takes these elements and re-engineers them into a formal system: - No ambiguity. - No cultural dependency. - Every piece of information explicitly typed.",
                "style_id": "BodyText",
                "numbered": false
              },
              {
                "type": "paragraph",
                "text": "This chapter introduces the guiding principles of design that make UL efficient for machines and usable for humans.",
                "style_id": "BodyText",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 3,
              "text": "3.2 Principle 1 — Explicitness",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "Natural language thrives on implication: - “See you later” → no time given. - “It’s hot” → relative to context.",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "paragraph",
                "text": "For AIs, implication is dangerous. UL requires everything to be explicit: - Time must always be marked (:time). - Numbers must have units (:unit). - Confidence must be declared (:conf). - Evidence must be given (:evid).",
                "style_id": "BodyText",
                "numbered": false
              },
              {
                "type": "paragraph",
                "text": "➡️ Nothing is left for interpretation outside the message.",
                "style_id": "BodyText",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 3,
              "text": "3.3 Principle 2 — Minimal Core Atoms",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "Instead of thousands of rules, UL builds on a small set of atoms, inspired by linguistic universals.",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "paragraph",
                "text": "Core atoms: - ENT (entity), REL (relation/predicate), TIME, MOD (modality), NEG, EVID, CONF, UNIT, REF, LINK, SCOPE.",
                "style_id": "BodyText",
                "numbered": false
              },
              {
                "type": "paragraph",
                "text": "From these, all complex expressions can be built. ➡️ UL is both small (easy to learn) and powerful (unlimited expressivity).",
                "style_id": "BodyText",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 3,
              "text": "3.4 Principle 3 — Dual-Channel Communication",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "UL is always encoded in two layers: 1. Canonical Core — S-expressions or JSON. Precise, machine-readable. 2. Human Surface Gloss — compact, regularized text that humans can read/write.",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "paragraph",
                "text": "Example:",
                "style_id": "BodyText",
                "numbered": false
              },
              {
                "type": "paragraph",
                "text": "Core:",
                "style_id": "BodyText",
                "numbered": false
              },
              {
                "type": "paragraph",
                "text": "(assert\n  :event e7\n  :pred own\n  :args { agent (REF alice) theme (REF car-17) }\n  :time { tense past at 2023-05-01 }\n  :mod { type epistemic val likely }\n  :neg false\n  :evid report\n  :conf 0.72\n)",
                "style_id": "SourceCode",
                "numbered": false
              },
              {
                "type": "paragraph",
                "text": "Surface Gloss: own{agent:Alice, theme:car-17}; TIME[past@2023-05-01]; MOD[epistemic:likely]; EVID[report]; CONF=0.72;",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 3,
              "text": "3.5 Principle 4 — Separation of Concerns",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "In natural language, meanings overlap: - “must” = necessity, obligation, or logical entailment depending on context. - Word order can mean syntax and emphasis.",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "paragraph",
                "text": "UL separates concerns: - Time, modality, negation, evidence, and confidence are distinct fields. - No single marker carries multiple meanings. - Machines never need to guess which sense applies.",
                "style_id": "BodyText",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 3,
              "text": "3.6 Principle 5 — Extensibility",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "The UL core is minimal, but it must handle all domains: law, medicine, engineering, daily conversation.",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "paragraph",
                "text": "Solution: namespaces and ontologies. - Predicates (REL) can point to external definitions: - geo:located_in - bio:binds_to - econ:interest_rate - Each predicate may carry a :link to an ontology entry (e.g. Wikidata, schema.org).",
                "style_id": "BodyText",
                "numbered": false
              },
              {
                "type": "paragraph",
                "text": "➡️ UL scales from simple chat to scientific publishing.",
                "style_id": "BodyText",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 3,
              "text": "3.7 Principle 6 — Interoperability",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "UL must flow across systems, networks, and formats. - Serialization: S-expressions, JSON, or binary CBOR. - Envelope (header) ensures consistent identity, time, and routing. - Compression is efficient (repeated tags compress well). - Signature field (:sig) ensures message integrity.",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "paragraph",
                "text": "➡️ Humans see the surface gloss; AIs process the canonical core; networks see the envelope.",
                "style_id": "BodyText",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 3,
              "text": "3.8 Principle 7 — Error Tolerance and Repair",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "Human language has repair strategies (“What do you mean?”). UL encodes this formally: - If something is missing → (repair :on e7 :need unit) - If request fails → (fail :of r5 :reason size_limit_exceeded)",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "paragraph",
                "text": "➡️ Misunderstandings don’t cause collapse — they trigger explicit repair.",
                "style_id": "BodyText",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 3,
              "text": "3.9 Principle 8 — Symmetry Between Human and AI Use",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "UL is not just for AI–AI pipelines; humans can also learn it. - The surface gloss is compact and regular (easier than learning Latin or logic notation). - Core grammar is transparent: no irregular verbs, no idioms. - UL is designed to be teachable in a study-book format (this handbook itself).",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "paragraph",
                "text": "➡️ Human learners and AI systems can share the same protocol.",
                "style_id": "BodyText",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 3,
              "text": "3.10 Principles Summary",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "table",
                "rows": [
                  [
                    {
                      "text": "Principle"
                    },
                    {
                      "text": "Description"
                    },
                    {
                      "text": "Effect"
                    }
                  ],
                  [
                    {
                      "text": "Explicitness"
                    },
                    {
                      "text": "All fields mandatory"
                    },
                    {
                      "text": "Zero ambiguity"
                    }
                  ],
                  [
                    {
                      "text": "Minimal Core Atoms"
                    },
                    {
                      "text": "Few universals"
                    },
                    {
                      "text": "Infinite composability"
                    }
                  ],
                  [
                    {
                      "text": "Dual-Channel"
                    },
                    {
                      "text": "Core + Surface"
                    },
                    {
                      "text": "Human + AI accessibility"
                    }
                  ],
                  [
                    {
                      "text": "Separation"
                    },
                    {
                      "text": "Time, Modality, Negation distinct"
                    },
                    {
                      "text": "No overlap"
                    }
                  ],
                  [
                    {
                      "text": "Extensibility"
                    },
                    {
                      "text": "Namespaces, ontologies"
                    },
                    {
                      "text": "Scales to all domains"
                    }
                  ],
                  [
                    {
                      "text": "Interoperability"
                    },
                    {
                      "text": "JSON, S-expr, CBOR, signatures"
                    },
                    {
                      "text": "Cross-system portability"
                    }
                  ],
                  [
                    {
                      "text": "Repair Mechanisms"
                    },
                    {
                      "text": "Explicit repair/fail messages"
                    },
                    {
                      "text": "Robust dialogue"
                    }
                  ],
                  [
                    {
                      "text": "Human–AI Symmetry"
                    },
                    {
                      "text": "Learnable surface gloss"
                    },
                    {
                      "text": "Shared use"
                    }
                  ]
                ]
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 3,
              "text": "3.11 Transition",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "Now that the principles are clear, we can move into formal specification: - Chapter 4: Message Envelope — the “wrapper” every UL message carries. - Chapter 5–7: Core atoms, syntax, and semantics.",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "paragraph",
                "text": "These chapters will form the technical backbone of UL.",
                "style_id": "BodyText",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          }
        ]
      },
      {
        "heading": {
          "level": 1,
          "text": "Chapter 4. The Message Envelope",
          "style_id": "Heading1"
        },
        "blocks": [
          {
            "type": "unknown:bookmarkStart"
          }
        ],
        "sections": [
          {
            "heading": {
              "level": 3,
              "text": "4.1 Purpose of the Envelope",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "Every UL message travels inside a wrapper called the envelope. - It ensures that meaning is not only in the content but also in the context: who said it, to whom, when, under what integrity guarantee. - Natural languages often drop context (“See you tomorrow” → who, when?). UL never does.",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "paragraph",
                "text": "The envelope is minimal but mandatory.",
                "style_id": "BodyText",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 3,
              "text": "4.2 Structure of the Envelope",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "UL/1\nid: <uuid>              # unique identifier for this message\nfrom: <agent-id>        # sender\nto: <agent-id|group>    # recipient(s)\nt: <ISO-8601>           # timestamp\nctx: <thread|topic>     # optional conversation ID\nsig: <hash>             # optional integrity signature",
                "style_id": "SourceCode",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 3,
              "text": "4.3 Fields Explained",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "Version (UL/1) — ensures compatibility.",
                "style_id": "Compact",
                "numbered": true
              },
              {
                "type": "paragraph",
                "text": "id — globally unique message identifier (UUID v4). Prevents confusion and supports tracking.",
                "style_id": "Compact",
                "numbered": true
              },
              {
                "type": "paragraph",
                "text": "from / to — sender and addressee(s). Can be individual IDs, groups, or broadcast tokens.",
                "style_id": "Compact",
                "numbered": true
              },
              {
                "type": "paragraph",
                "text": "t — precise timestamp (UTC, ISO 8601). Required for chronology and synchronization.",
                "style_id": "Compact",
                "numbered": true
              },
              {
                "type": "paragraph",
                "text": "ctx — optional thread or conversation context. Allows grouping of related exchanges.",
                "style_id": "Compact",
                "numbered": true
              },
              {
                "type": "paragraph",
                "text": "sig — optional cryptographic hash/signature for message integrity and authentication.",
                "style_id": "Compact",
                "numbered": true
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 3,
              "text": "4.4 Examples",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "Simple assertion:",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "paragraph",
                "text": "UL/1\nid: 12ac-b34d\nfrom: alice\nto: bob\nt: 2025-09-28T08:00:00Z\nctx: project-zen",
                "style_id": "SourceCode",
                "numbered": false
              },
              {
                "type": "paragraph",
                "text": "With signature:",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "paragraph",
                "text": "UL/1\nid: 89ff-2221\nfrom: sensor-17\nto: central-hub\nt: 2025-09-28T09:00:00Z\nsig: sha256:ab37c9...",
                "style_id": "SourceCode",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 3,
              "text": "4.5 Advantages",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "Robust tracking: every message is addressable.",
                "style_id": "Compact",
                "numbered": true
              },
              {
                "type": "paragraph",
                "text": "Auditability: context + signature enable verifiable history.",
                "style_id": "Compact",
                "numbered": true
              },
              {
                "type": "paragraph",
                "text": "Scalability: works for human conversation and distributed AI networks.",
                "style_id": "Compact",
                "numbered": true
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 3,
              "text": "4.6 Transition",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "The envelope is just the shell. Inside lies the core — atoms that carry meaning. That is the subject of the next chapter.",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          }
        ]
      },
      {
        "heading": {
          "level": 1,
          "text": "Chapter 5. Core Atoms and Tags",
          "style_id": "Heading1"
        },
        "blocks": [
          {
            "type": "unknown:bookmarkStart"
          }
        ],
        "sections": [
          {
            "heading": {
              "level": 3,
              "text": "5.1 Why Atoms?",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "Natural languages use thousands of words, but at their base, they all share the same semantic building blocks. UL reduces this to a small atomic inventory. These are like periodic table elements for meaning.",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 3,
              "text": "5.2 The Core Atoms",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "ENT — Entities (objects, people, concepts).",
                "style_id": "Compact",
                "numbered": true
              },
              {
                "type": "paragraph",
                "text": "REL — Relations / predicates (actions, states).",
                "style_id": "Compact",
                "numbered": true
              },
              {
                "type": "paragraph",
                "text": "TIME — Temporal information.",
                "style_id": "Compact",
                "numbered": true
              },
              {
                "type": "paragraph",
                "text": "MOD — Modality (possibility, necessity, ability, permission).",
                "style_id": "Compact",
                "numbered": true
              },
              {
                "type": "paragraph",
                "text": "NEG — Negation.",
                "style_id": "Compact",
                "numbered": true
              },
              {
                "type": "paragraph",
                "text": "EVID — Evidential source (observation, report, model, sensor, rule).",
                "style_id": "Compact",
                "numbered": true
              },
              {
                "type": "paragraph",
                "text": "CONF — Confidence level (0–1).",
                "style_id": "Compact",
                "numbered": true
              },
              {
                "type": "paragraph",
                "text": "UNIT — Measurement unit.",
                "style_id": "Compact",
                "numbered": true
              },
              {
                "type": "paragraph",
                "text": "REF — Stable reference identifiers.",
                "style_id": "Compact",
                "numbered": true
              },
              {
                "type": "paragraph",
                "text": "LINK — External pointer (URI, ontology entry).",
                "style_id": "Compact",
                "numbered": true
              },
              {
                "type": "paragraph",
                "text": "SCOPE — Explicit boundary for quantifiers, negation, conditionals.",
                "style_id": "Compact",
                "numbered": true
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 3,
              "text": "5.3 Roles (Arguments)",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "Predicates always have roles. Core inventory: - agent (doer) - patient/theme (acted upon) - recipient (receiving party) - source (origin) - goal (target) - location (place) - instrument (tool used) - beneficiary (who benefits)",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 3,
              "text": "5.4 Example Atom Use",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "Event: “Alice gave Bob a book in Paris yesterday.”",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "paragraph",
                "text": "(assert\n  :event e1\n  :pred give\n  :args { agent (REF alice) theme (REF book-1) recipient (REF bob) location (REF paris) }\n  :time { tense past at 2025-09-27 }\n  :evid report\n  :conf 0.95\n)",
                "style_id": "SourceCode",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 3,
              "text": "5.5 Summary",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "The atoms ensure universality and modularity. With ~11 atoms and 7–8 role types, UL can express anything a natural language can — without ambiguity.",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 3,
              "text": "5.6 Transition",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "Now that we know the atoms, we must learn how to combine them. That is the role of syntax.",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          }
        ]
      },
      {
        "heading": {
          "level": 1,
          "text": "Chapter 6. Syntax Specification",
          "style_id": "Heading1"
        },
        "blocks": [
          {
            "type": "unknown:bookmarkStart"
          }
        ],
        "sections": [
          {
            "heading": {
              "level": 3,
              "text": "6.1 Canonical Core Syntax",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "The core uses S-expressions (nested parentheses, Lisp-style). - Minimal parsing overhead. - Easy to serialize into JSON or CBOR. - Human-readable.",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 3,
              "text": "6.2 Basic Pattern",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "(assert\n  :event <id>\n  :pred <REL>\n  :args { role1 <ENT> role2 <ENT> ... }\n  :time { tense <past|present|future> at <ISO|interval> }\n  :mod  { type <epistemic|deontic|ability> val <must|may|can|likely> }\n  :neg  <true|false>\n  :evid <obs|report|model|sensor|rule>\n  :conf <0..1>\n  :unit <SI unit if numeric>\n  :notes <optional free text>\n)",
                "style_id": "SourceCode",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 3,
              "text": "6.3 Types of Statements",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "Assertions (facts/events)",
                "style_id": "Compact",
                "numbered": true
              },
              {
                "type": "paragraph",
                "text": "Requests (imperatives)",
                "style_id": "Compact",
                "numbered": true
              },
              {
                "type": "paragraph",
                "text": "Measures (quantitative reports)",
                "style_id": "Compact",
                "numbered": true
              },
              {
                "type": "paragraph",
                "text": "Comparisons (logical/evaluative)",
                "style_id": "Compact",
                "numbered": true
              },
              {
                "type": "paragraph",
                "text": "Repairs/Failures",
                "style_id": "Compact",
                "numbered": true
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 3,
              "text": "6.4 Human Surface Gloss",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "Every core message can be glossed into a human-readable line.",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "paragraph",
                "text": "Rule: PRED{args}; TIME[]; MOD[]; NEG?; EVID[]; CONF=0.95;",
                "style_id": "BodyText",
                "numbered": false
              },
              {
                "type": "paragraph",
                "text": "Example (from e1): give{agent:Alice, theme:book-1, recipient:Bob, location:Paris}; TIME[past@2025-09-27]; EVID[report]; CONF=0.95;",
                "style_id": "BodyText",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 3,
              "text": "6.5 Grammar Formalization (EBNF fragment)",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "message  = \"(\" statement \")\";\nstatement = \"assert\" | \"request\" | \"measure\" | \"compare\" | \"repair\" | \"fail\";\nargs      = \"{\" { role entity } \"}\";\nrole      = symbol;\nentity    = symbol | REF | LINK;\ntime      = \"{ tense tense-val [ \"at\" time-val ] }\";\ntense-val = \"past\" | \"present\" | \"future\";\nmodality  = \"{ type mod-type val mod-val }\";",
                "style_id": "SourceCode",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 3,
              "text": "6.6 JSON Schema Equivalence",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"event\": { \"type\": \"string\" },\n    \"pred\": { \"type\": \"string\" },\n    \"args\": { \"type\": \"object\" },\n    \"time\": { \"type\": \"object\" },\n    \"mod\":  { \"type\": \"object\" },\n    \"neg\":  { \"type\": \"boolean\" },\n    \"evid\": { \"type\": \"string\" },\n    \"conf\": { \"type\": \"number\" },\n    \"unit\": { \"type\": \"string\" }\n  },\n  \"required\": [\"event\",\"pred\",\"args\"]\n}",
                "style_id": "SourceCode",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 3,
              "text": "6.7 Transition",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "Syntax makes atoms combinable. The next step is semantics — how these structures map to meaning and reasoning.",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          }
        ]
      },
      {
        "heading": {
          "level": 1,
          "text": "Chapter 7. Semantics of UL",
          "style_id": "Heading1"
        },
        "blocks": [
          {
            "type": "unknown:bookmarkStart"
          }
        ],
        "sections": [
          {
            "heading": {
              "level": 3,
              "text": "7.1 Semantic Commitment",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "UL is not just form — it encodes meaning directly. - No idioms. - No hidden metaphors. - Every field corresponds to a semantic dimension.",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 3,
              "text": "7.2 Predicates and Roles",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "Semantics are defined by frames: each predicate declares its expected roles. - give: requires agent, theme, recipient. - measure: requires theme, value, unit.",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "paragraph",
                "text": "Frames are stored in a predicate dictionary (see Part IV).",
                "style_id": "BodyText",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 3,
              "text": "7.3 Time Semantics",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "UL time is absolute, not relative. - 2025-09-28T08:00Z instead of “yesterday”. - Relative phrases are normalized during encoding.",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 3,
              "text": "7.4 Modality Semantics",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "UL modality is typed: - epistemic = speaker’s certainty. - deontic = obligation/permission. - ability = capacity.",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "paragraph",
                "text": "Each has fixed values (must, may, can, likely, necessary, possible).",
                "style_id": "BodyText",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 3,
              "text": "7.5 Negation and Scope",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "UL makes scope explicit: - “Not all dogs bark” vs. “All dogs do not bark.”",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "paragraph",
                "text": "Example:",
                "style_id": "BodyText",
                "numbered": false
              },
              {
                "type": "paragraph",
                "text": "(assert\n  :event e9\n  :pred bark\n  :args { theme (forall x (dog x)) }\n  :neg true\n  :scope dogs\n)",
                "style_id": "SourceCode",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 3,
              "text": "7.6 Evidentiality",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "UL requires source specification: - obs (direct observation) - sensor (instrument reading) - report (hearsay or text) - model (simulation) - rule (deduction from a law/axiom)",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "paragraph",
                "text": "This makes every statement traceable.",
                "style_id": "BodyText",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 3,
              "text": "7.7 Confidence",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "Every assertion has a :conf value. - Humans use vague words (probably, maybe). - UL uses numbers (0.0–1.0).",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 3,
              "text": "7.8 Semantic Integrity",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "By requiring explicit atoms, UL ensures that: - Every claim is temporally located. - Every number has a unit. - Every claim has evidence and certainty. - Every predicate has roles filled.",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "paragraph",
                "text": "➡️ This prevents semantic drift between humans and machines.",
                "style_id": "BodyText",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 3,
              "text": "7.9 Transition",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "We now have: - Envelope (Chapter 4) - Atoms (Chapter 5) - Syntax (Chapter 6) - Semantics (Chapter 7)",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "paragraph",
                "text": "Together, these form the technical backbone of UL.",
                "style_id": "BodyText",
                "numbered": false
              },
              {
                "type": "paragraph",
                "text": "",
                "style_id": null,
                "numbered": false,
                "empty": true
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 2,
              "text": "Part II – Human Learning Guide",
              "style_id": "Heading2"
            },
            "blocks": [
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          }
        ]
      },
      {
        "heading": {
          "level": 1,
          "text": "Chapter 8. Basic Sentence Patterns",
          "style_id": "Heading1"
        },
        "blocks": [
          {
            "type": "unknown:bookmarkStart"
          }
        ],
        "sections": [
          {
            "heading": {
              "level": 3,
              "text": "8.1 First Step into UL",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "Like any language, UL has a starter set of sentence patterns. These patterns cover the most common communicative needs: 1. Making statements (assertions). 2. Asking for actions (requests). 3. Reporting measurements. 4. Making comparisons. 5. Handling repairs.",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "paragraph",
                "text": "Once you master these, you can build anything.",
                "style_id": "BodyText",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 3,
              "text": "8.2 Assertion (Facts/Events)",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "Pattern:",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "paragraph",
                "text": "(assert\n  :event <id>\n  :pred <REL>\n  :args { role1 <ENT> role2 <ENT> ... }\n  :time { tense ... at ... }\n  :evid <obs|report|model|sensor|rule>\n  :conf <0..1>\n)",
                "style_id": "SourceCode",
                "numbered": false
              },
              {
                "type": "paragraph",
                "text": "Surface Gloss: PRED{args}; TIME[past@...]; EVID[...]; CONF=...;",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "paragraph",
                "text": "Example: - English: “The cat sleeps on the sofa.” - UL:",
                "style_id": "BodyText",
                "numbered": false
              },
              {
                "type": "paragraph",
                "text": "(assert\n  :event e1\n  :pred sleep\n  :args { theme (REF cat-1) location (REF sofa-1) }\n  :time { tense present }\n  :evid obs\n  :conf 1.0\n)",
                "style_id": "SourceCode",
                "numbered": false
              },
              {
                "type": "paragraph",
                "text": "Gloss: sleep{theme:cat-1, location:sofa-1}; TIME[present]; EVID[obs]; CONF=1.0;",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 3,
              "text": "8.3 Request (Imperative)",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "Pattern:",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "paragraph",
                "text": "(request\n  :event <id>\n  :pred <REL>\n  :args { role1 <ENT> ... }\n  :constraints {...}\n  :by <deadline>\n)",
                "style_id": "SourceCode",
                "numbered": false
              },
              {
                "type": "paragraph",
                "text": "Example: - English: “Send me the file by tomorrow.” - UL:",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "paragraph",
                "text": "(request\n  :event r1\n  :pred send\n  :args { agent (REF you) theme (REF file-7) recipient (REF me) }\n  :by 2025-09-29T00:00:00Z\n  :conf 1.0\n)",
                "style_id": "SourceCode",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 3,
              "text": "8.4 Measurement",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "Pattern:",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "paragraph",
                "text": "(measure\n  :event <id>\n  :pred <REL>\n  :args { theme <ENT> }\n  :value <number>\n  :unit <unit>\n  :time {...}\n  :evid sensor\n  :conf <0..1>\n)",
                "style_id": "SourceCode",
                "numbered": false
              },
              {
                "type": "paragraph",
                "text": "Example: - English: “The water temperature is 21.3°C.” - UL:",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "paragraph",
                "text": "(measure\n  :event m1\n  :pred temperature\n  :args { theme (REF water-tank-1) }\n  :value 21.3\n  :unit celsius\n  :time { tense present at 2025-09-28T10:00:00Z }\n  :evid sensor\n  :conf 0.98\n)",
                "style_id": "SourceCode",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 3,
              "text": "8.5 Comparison",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "Pattern:",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "paragraph",
                "text": "(compare\n  :event <id>\n  :pred <REL>\n  :args { theme1 <ENT> theme2 <ENT> }\n  :relation <equal|greater|less>\n)",
                "style_id": "SourceCode",
                "numbered": false
              },
              {
                "type": "paragraph",
                "text": "Example: - English: “Alice is taller than Bob.” - UL:",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "paragraph",
                "text": "(compare\n  :event c1\n  :pred height\n  :args { theme1 (REF alice) theme2 (REF bob) }\n  :relation greater\n  :conf 0.9\n)",
                "style_id": "SourceCode",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 3,
              "text": "8.6 Repair",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "Pattern:",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "paragraph",
                "text": "(repair\n  :on <event-id>\n  :need <missing-field>\n)",
                "style_id": "SourceCode",
                "numbered": false
              },
              {
                "type": "paragraph",
                "text": "Example: - English: “What unit?” - UL:",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "paragraph",
                "text": "(repair\n  :on m1\n  :need unit\n)",
                "style_id": "SourceCode",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 3,
              "text": "8.7 Exercises",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "Translate into UL: 1. “The dog barked yesterday.” 2. “Please open the window.” 3. “The weight is 12 kilograms.” 4. “Is Paris larger than Lyon?”",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          }
        ]
      },
      {
        "heading": {
          "level": 1,
          "text": "Chapter 9. Expressing Time & Modality",
          "style_id": "Heading1"
        },
        "blocks": [
          {
            "type": "unknown:bookmarkStart"
          }
        ],
        "sections": [
          {
            "heading": {
              "level": 3,
              "text": "9.1 Time",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "UL always encodes when something happens. - Tense: past, present, future. - Specific timestamp: ISO 8601. - Interval: start–end.",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "paragraph",
                "text": "Examples: - “Yesterday” → :time { tense past at 2025-09-27 } - “From 9 to 10 am” → :time { interval { start 09:00 end 10:00 } }",
                "style_id": "BodyText",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 3,
              "text": "9.2 Aspect",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "UL can express ongoing or completed states: - progressive = still happening. - perfect = completed.",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "paragraph",
                "text": "Example: “Alice has eaten” →",
                "style_id": "BodyText",
                "numbered": false
              },
              {
                "type": "paragraph",
                "text": "(assert\n  :event e2\n  :pred eat\n  :args { agent (REF alice) theme (REF cake-1) }\n  :time { tense past aspect perfect }\n  :evid report\n  :conf 0.95\n)",
                "style_id": "SourceCode",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 3,
              "text": "9.3 Modality",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "UL separates types of modality: - Epistemic = likelihood (likely, possible). - Deontic = rules/obligations (must, may). - Ability = capacity (can).",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "paragraph",
                "text": "Example: - English: “Alice must leave.” - UL:",
                "style_id": "BodyText",
                "numbered": false
              },
              {
                "type": "paragraph",
                "text": "(assert\n  :event e3\n  :pred leave\n  :args { agent (REF alice) }\n  :time { tense future }\n  :mod { type deontic val must }\n  :evid rule\n  :conf 1.0\n)",
                "style_id": "SourceCode",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 3,
              "text": "9.4 Combining Time & Modality",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "“Alice might have left yesterday.”",
                "style_id": "Compact",
                "numbered": true
              },
              {
                "type": "paragraph",
                "text": "(assert\n  :event e4\n  :pred leave\n  :args { agent (REF alice) }\n  :time { tense past at 2025-09-27 }\n  :mod { type epistemic val possible }\n  :evid report\n  :conf 0.6\n)",
                "style_id": "SourceCode",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 3,
              "text": "9.5 Exercises",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "Translate “Bob will probably arrive tomorrow.”",
                "style_id": "Compact",
                "numbered": true
              },
              {
                "type": "paragraph",
                "text": "Translate “You may enter at 10:00.”",
                "style_id": "Compact",
                "numbered": true
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          }
        ]
      },
      {
        "heading": {
          "level": 1,
          "text": "Chapter 10. Quantifiers & Negation",
          "style_id": "Heading1"
        },
        "blocks": [
          {
            "type": "unknown:bookmarkStart"
          }
        ],
        "sections": [
          {
            "heading": {
              "level": 3,
              "text": "10.1 Quantifiers",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "UL expresses quantifiers with explicit scope. - “All dogs bark.”",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "paragraph",
                "text": "(assert\n  :event e5\n  :pred bark\n  :args { theme (forall x (dog x)) }\n  :conf 0.9\n)",
                "style_id": "SourceCode",
                "numbered": false
              },
              {
                "type": "paragraph",
                "text": "“Some dogs bark.”",
                "style_id": "Compact",
                "numbered": true
              },
              {
                "type": "paragraph",
                "text": "(assert\n  :event e6\n  :pred bark\n  :args { theme (exists x (dog x)) }\n  :conf 0.9\n)",
                "style_id": "SourceCode",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 3,
              "text": "10.2 Negation",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "Negation is explicit and scoped. - “The cat is not sleeping.”",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "paragraph",
                "text": "(assert\n  :event e7\n  :pred sleep\n  :args { theme (REF cat-1) }\n  :time { tense present }\n  :neg true\n  :conf 1.0\n)",
                "style_id": "SourceCode",
                "numbered": false
              },
              {
                "type": "paragraph",
                "text": "“Not all dogs bark.”",
                "style_id": "Compact",
                "numbered": true
              },
              {
                "type": "paragraph",
                "text": "(assert\n  :event e8\n  :pred bark\n  :args { theme (forall x (dog x)) }\n  :neg true\n  :scope dogs\n  :conf 0.95\n)",
                "style_id": "SourceCode",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 3,
              "text": "10.3 Exercises",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "Encode “Some students did not attend.”",
                "style_id": "Compact",
                "numbered": true
              },
              {
                "type": "paragraph",
                "text": "Encode “All birds cannot swim.”",
                "style_id": "Compact",
                "numbered": true
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          }
        ]
      },
      {
        "heading": {
          "level": 1,
          "text": "Chapter 11. Evidence & Confidence",
          "style_id": "Heading1"
        },
        "blocks": [
          {
            "type": "unknown:bookmarkStart"
          }
        ],
        "sections": [
          {
            "heading": {
              "level": 3,
              "text": "11.1 Evidence Types",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "Every statement must specify source: - obs = direct human observation. - sensor = device measurement. - report = second-hand info. - model = simulation, forecast. - rule = law, axiom, definition.",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 3,
              "text": "11.2 Confidence",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "Numeric probability from 0.0 to 1.0. - 1.0 = certain. - 0.5 = uncertain. - 0.0 = impossible.",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 3,
              "text": "11.3 Combined Example",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "“It will probably rain tomorrow (weather model).”",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "paragraph",
                "text": "(assert\n  :event e9\n  :pred rain\n  :args { location (REF paris) }\n  :time { tense future at 2025-09-29 }\n  :mod { type epistemic val likely }\n  :evid model\n  :conf 0.7\n)",
                "style_id": "SourceCode",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 3,
              "text": "11.4 Exercises",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "Encode “Apparently, Alice is in Berlin.”",
                "style_id": "Compact",
                "numbered": true
              },
              {
                "type": "paragraph",
                "text": "Encode “The sensor shows 35.1°C with 98% certainty.”",
                "style_id": "Compact",
                "numbered": true
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          }
        ]
      },
      {
        "heading": {
          "level": 1,
          "text": "Chapter 12. Complex Structures",
          "style_id": "Heading1"
        },
        "blocks": [
          {
            "type": "unknown:bookmarkStart"
          }
        ],
        "sections": [
          {
            "heading": {
              "level": 3,
              "text": "12.1 Recursion",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "UL allows nested clauses. “The man who saw the woman who had a dog smiled.”",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "paragraph",
                "text": "(assert\n  :event e10\n  :pred smile\n  :args {\n    agent (REF man-1)\n    cause (assert\n      :event e11\n      :pred see\n      :args {\n        agent (REF man-1)\n        theme (REF woman-1)\n      }\n      :sub (assert\n        :event e12\n        :pred have\n        :args { agent (REF woman-1) theme (REF dog-1) }\n      )\n    )\n  }\n)",
                "style_id": "SourceCode",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 3,
              "text": "12.2 Conditionals",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "“If it rains, the game will be canceled.”",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "paragraph",
                "text": "(assert\n  :event e13\n  :pred cancel\n  :args { theme (REF game-1) }\n  :time { tense future }\n  :cond (assert\n    :event e14\n    :pred rain\n    :time { tense future }\n  )\n)",
                "style_id": "SourceCode",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 3,
              "text": "12.3 Constraints",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "“Send the file (must be <50MB, format CSV).”",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "paragraph",
                "text": "(request\n  :event r2\n  :pred send\n  :args { agent (REF you) theme (REF file-9) }\n  :constraints { size < 50MB; format csv }\n)",
                "style_id": "SourceCode",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 3,
              "text": "12.4 Exercises",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "Encode “If Alice comes, Bob will leave.”",
                "style_id": "Compact",
                "numbered": true
              },
              {
                "type": "paragraph",
                "text": "Encode “Every student who passed the exam received a certificate.”",
                "style_id": "Compact",
                "numbered": true
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          }
        ]
      },
      {
        "heading": {
          "level": 1,
          "text": "Chapter 13. Exercises & Drills",
          "style_id": "Heading1"
        },
        "blocks": [
          {
            "type": "unknown:bookmarkStart"
          }
        ],
        "sections": [
          {
            "heading": {
              "level": 3,
              "text": "13.1 Beginner",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "“The lamp is on.”",
                "style_id": "Compact",
                "numbered": true
              },
              {
                "type": "paragraph",
                "text": "“Please close the door.”",
                "style_id": "Compact",
                "numbered": true
              },
              {
                "type": "paragraph",
                "text": "“The weight is 10kg.”",
                "style_id": "Compact",
                "numbered": true
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 3,
              "text": "13.2 Intermediate",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "“Alice might be in Paris.”",
                "style_id": "Compact",
                "numbered": true
              },
              {
                "type": "paragraph",
                "text": "“Not all cats like milk.”",
                "style_id": "Compact",
                "numbered": true
              },
              {
                "type": "paragraph",
                "text": "“Send the report by tomorrow.”",
                "style_id": "Compact",
                "numbered": true
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 3,
              "text": "13.3 Advanced",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "“If Bob doesn’t study, he will fail.”",
                "style_id": "Compact",
                "numbered": true
              },
              {
                "type": "paragraph",
                "text": "“Every researcher who wrote a paper received funding.”",
                "style_id": "Compact",
                "numbered": true
              },
              {
                "type": "paragraph",
                "text": "“It will probably snow next week, according to the forecast.”",
                "style_id": "Compact",
                "numbered": true
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 3,
              "text": "13.4 Answer Key (selected)",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "“The lamp is on.”",
                "style_id": "Compact",
                "numbered": true
              },
              {
                "type": "paragraph",
                "text": "(assert\n  :event e15\n  :pred on\n  :args { theme (REF lamp-1) }\n  :time { tense present }\n  :evid obs\n  :conf 1.0\n)",
                "style_id": "SourceCode",
                "numbered": false
              },
              {
                "type": "paragraph",
                "text": "“Alice might be in Paris.”",
                "style_id": "Compact",
                "numbered": true
              },
              {
                "type": "paragraph",
                "text": "(assert\n  :event e16\n  :pred located_in\n  :args { theme (REF alice) location (REF paris) }\n  :mod { type epistemic val possible }\n  :evid report\n  :conf 0.6\n)",
                "style_id": "SourceCode",
                "numbered": false
              },
              {
                "type": "paragraph",
                "text": "",
                "style_id": null,
                "numbered": false,
                "empty": true
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 2,
              "text": "Part III – Encyclopedic Lexicon",
              "style_id": "Heading2"
            },
            "blocks": [
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          }
        ]
      },
      {
        "heading": {
          "level": 1,
          "text": "Chapter 14. Core Predicate Lexicon",
          "style_id": "Heading1"
        },
        "blocks": [
          {
            "type": "unknown:bookmarkStart"
          }
        ],
        "sections": [
          {
            "heading": {
              "level": 3,
              "text": "14.1 Purpose",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "Predicates are the action words of UL. They define what kind of relation is being asserted, requested, or measured. Unlike natural languages, UL predicates are: - Regular — no irregular verbs. - Frame-based — each predicate comes with a fixed set of roles. - Expandable — new domains can add their own namespaces (e.g., bio:binds_to).",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 3,
              "text": "14.2 Starter Predicate Set",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "Existence & Identity - be (state, property, identity) - equal (two entities are identical) - exist (entity exists)",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "paragraph",
                "text": "Possession & Transfer - have (possession) - own (ownership) - give (transfer ownership)",
                "style_id": "BodyText",
                "numbered": false
              },
              {
                "type": "paragraph",
                "text": "Action & Process - do (generic action) - move (agent moves theme to location) - make (agent creates theme)",
                "style_id": "BodyText",
                "numbered": false
              },
              {
                "type": "paragraph",
                "text": "Perception & Communication - see (perceive visually) - hear (perceive auditorily) - say (agent communicates theme to recipient) - ask (agent requests info from recipient)",
                "style_id": "BodyText",
                "numbered": false
              },
              {
                "type": "paragraph",
                "text": "Measurement & Comparison - measure (report quantitative value) - compare (evaluate relation: equal, greater, less)",
                "style_id": "BodyText",
                "numbered": false
              },
              {
                "type": "paragraph",
                "text": "Causality & Permission - cause (agent causes event) - allow (agent permits event) - require (obligation, necessity)",
                "style_id": "BodyText",
                "numbered": false
              },
              {
                "type": "paragraph",
                "text": "Spatial Relations - located_in (entity at place) - part_of (entity is part of whole)",
                "style_id": "BodyText",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 3,
              "text": "14.3 Example",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "(assert\n  :event e20\n  :pred give\n  :args { agent (REF alice) theme (REF book-1) recipient (REF bob) }\n  :time { tense past }\n  :evid report\n  :conf 0.95\n)",
                "style_id": "SourceCode",
                "numbered": false
              },
              {
                "type": "paragraph",
                "text": "Gloss: give{agent:Alice, theme:book-1, recipient:Bob}; TIME[past]; EVID[report]; CONF=0.95;",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 3,
              "text": "14.4 Expansion",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "Specialized fields (medicine, law, engineering) can define new predicates under namespaces: - med:diagnose, med:prescribe - law:contract_signed - eng:voltage",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "paragraph",
                "text": "All must follow the frame principle: clear predicate + fixed roles.",
                "style_id": "BodyText",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          }
        ]
      },
      {
        "heading": {
          "level": 1,
          "text": "Chapter 15. Role Inventory",
          "style_id": "Heading1"
        },
        "blocks": [
          {
            "type": "unknown:bookmarkStart"
          }
        ],
        "sections": [
          {
            "heading": {
              "level": 3,
              "text": "15.1 Purpose",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "Roles connect predicates to entities. Each predicate declares which roles it expects. Roles prevent ambiguity: instead of “Bob saw Alice with a telescope,” UL clarifies who had the telescope.",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 3,
              "text": "15.2 Core Roles",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "agent — the doer (subject in many languages).",
                "style_id": "Compact",
                "numbered": true
              },
              {
                "type": "paragraph",
                "text": "theme/patient — the entity acted upon.",
                "style_id": "Compact",
                "numbered": true
              },
              {
                "type": "paragraph",
                "text": "recipient — entity receiving something.",
                "style_id": "Compact",
                "numbered": true
              },
              {
                "type": "paragraph",
                "text": "source — origin of motion/transfer.",
                "style_id": "Compact",
                "numbered": true
              },
              {
                "type": "paragraph",
                "text": "goal — target or destination.",
                "style_id": "Compact",
                "numbered": true
              },
              {
                "type": "paragraph",
                "text": "location — place.",
                "style_id": "Compact",
                "numbered": true
              },
              {
                "type": "paragraph",
                "text": "instrument — tool used.",
                "style_id": "Compact",
                "numbered": true
              },
              {
                "type": "paragraph",
                "text": "cause — event or condition triggering something.",
                "style_id": "Compact",
                "numbered": true
              },
              {
                "type": "paragraph",
                "text": "beneficiary — entity that benefits.",
                "style_id": "Compact",
                "numbered": true
              },
              {
                "type": "paragraph",
                "text": "experiencer — entity perceiving or feeling.",
                "style_id": "Compact",
                "numbered": true
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 3,
              "text": "15.3 Example",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "“Alice cut the bread with a knife.”",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "paragraph",
                "text": "(assert\n  :event e21\n  :pred cut\n  :args { agent (REF alice) theme (REF bread-1) instrument (REF knife-1) }\n  :time { tense past }\n  :evid obs\n  :conf 1.0\n)",
                "style_id": "SourceCode",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 3,
              "text": "15.4 Benefits",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "Explicit role labeling → no ambiguity.",
                "style_id": "Compact",
                "numbered": true
              },
              {
                "type": "paragraph",
                "text": "Cross-linguistic neutrality → doesn’t depend on subject/object word order.",
                "style_id": "Compact",
                "numbered": true
              },
              {
                "type": "paragraph",
                "text": "Extensible for domain-specific roles (e.g., legal:plaintiff, legal:defendant).",
                "style_id": "Compact",
                "numbered": true
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          }
        ]
      },
      {
        "heading": {
          "level": 1,
          "text": "Chapter 16. Modality & Evidentiality Tables",
          "style_id": "Heading1"
        },
        "blocks": [
          {
            "type": "unknown:bookmarkStart"
          }
        ],
        "sections": [
          {
            "heading": {
              "level": 3,
              "text": "16.1 Modality Values",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "UL distinguishes modality types and values.",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "paragraph",
                "text": "Epistemic (belief/knowledge): - certain (conf=1.0) - likely - possible - unlikely",
                "style_id": "BodyText",
                "numbered": false
              },
              {
                "type": "paragraph",
                "text": "Deontic (rules/obligations): - must - may - forbidden",
                "style_id": "BodyText",
                "numbered": false
              },
              {
                "type": "paragraph",
                "text": "Ability/Capacity: - can - cannot",
                "style_id": "BodyText",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 3,
              "text": "16.2 Evidentiality",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "Specifies source of information. - obs = direct human observation. - sensor = device measurement. - report = second-hand information. - model = simulation or forecast. - rule = deduction from law or axiom.",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 3,
              "text": "16.3 Examples",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "“Alice must leave (by rule).”",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "paragraph",
                "text": "(assert\n  :event e22\n  :pred leave\n  :args { agent (REF alice) }\n  :time { tense future }\n  :mod { type deontic val must }\n  :evid rule\n  :conf 1.0\n)",
                "style_id": "SourceCode",
                "numbered": false
              },
              {
                "type": "paragraph",
                "text": "“It will probably rain (weather model).”",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "paragraph",
                "text": "(assert\n  :event e23\n  :pred rain\n  :args { location (REF berlin) }\n  :time { tense future at 2025-09-29 }\n  :mod { type epistemic val likely }\n  :evid model\n  :conf 0.7\n)",
                "style_id": "SourceCode",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          }
        ]
      },
      {
        "heading": {
          "level": 1,
          "text": "Chapter 17. Units & Measures",
          "style_id": "Heading1"
        },
        "blocks": [
          {
            "type": "unknown:bookmarkStart"
          }
        ],
        "sections": [
          {
            "heading": {
              "level": 3,
              "text": "17.1 Necessity",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "Numbers without units are meaningless. Natural language often omits them (“It weighs 10”). UL enforces mandatory units.",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 3,
              "text": "17.2 SI Units",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "Base set: - Length: meter (m) - Mass: kilogram (kg) - Time: second (s) - Temperature: kelvin (K), celsius (°C) - Electric current: ampere (A) - Substance: mole (mol) - Luminous intensity: candela (cd)",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 3,
              "text": "17.3 Derived Units",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "Velocity: m/s",
                "style_id": "Compact",
                "numbered": true
              },
              {
                "type": "paragraph",
                "text": "Area: m²",
                "style_id": "Compact",
                "numbered": true
              },
              {
                "type": "paragraph",
                "text": "Volume: m³",
                "style_id": "Compact",
                "numbered": true
              },
              {
                "type": "paragraph",
                "text": "Energy: joule (J)",
                "style_id": "Compact",
                "numbered": true
              },
              {
                "type": "paragraph",
                "text": "Power: watt (W)",
                "style_id": "Compact",
                "numbered": true
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 3,
              "text": "17.4 Example",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "“The mass is 12 kilograms.”",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "paragraph",
                "text": "(measure\n  :event m2\n  :pred mass\n  :args { theme (REF sample-1) }\n  :value 12\n  :unit kg\n  :evid sensor\n  :conf 1.0\n)",
                "style_id": "SourceCode",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 3,
              "text": "17.5 Extensibility",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "Domains can add custom units: - Finance: USD, EUR, % - Medicine: mg/dL, mmHg - Computing: MB, GB, ms",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          }
        ]
      },
      {
        "heading": {
          "level": 1,
          "text": "Chapter 18. Ontology Expansion Guide",
          "style_id": "Heading1"
        },
        "blocks": [
          {
            "type": "unknown:bookmarkStart"
          }
        ],
        "sections": [
          {
            "heading": {
              "level": 3,
              "text": "18.1 Why Expansion?",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "The core lexicon is small but must scale. New fields need new terms — but expansion must remain structured.",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 3,
              "text": "18.2 Namespaces",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "UL adopts the namespace model: - geo: for geography. - med: for medicine. - law: for law. - eng: for engineering.",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "paragraph",
                "text": "Predicates are prefixed by namespace: - med:diagnose - law:contract_signed",
                "style_id": "BodyText",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 3,
              "text": "18.3 Linking to External Ontologies",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "UL allows every predicate or entity to carry a :link to an external ontology. Example:",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "paragraph",
                "text": "(assert\n  :event e24\n  :pred med:diagnose\n  :args { agent (REF doctor-1) theme (REF patient-1) condition (REF diabetes) }\n  :link https://www.wikidata.org/entity/Q1220\n  :time { tense past }\n  :evid report\n  :conf 0.95\n)",
                "style_id": "SourceCode",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 3,
              "text": "18.4 Best Practices",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "Use short, stable namespaces.",
                "style_id": "Compact",
                "numbered": true
              },
              {
                "type": "paragraph",
                "text": "Always attach external links where available.",
                "style_id": "Compact",
                "numbered": true
              },
              {
                "type": "paragraph",
                "text": "Maintain domain dictionaries for consistency.",
                "style_id": "Compact",
                "numbered": true
              },
              {
                "type": "paragraph",
                "text": "Avoid synonym duplication — one predicate per concept.",
                "style_id": "Compact",
                "numbered": true
              },
              {
                "type": "paragraph",
                "text": "",
                "style_id": null,
                "numbered": false,
                "empty": true
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 2,
              "text": "Part IV – Reference & Interoperability",
              "style_id": "Heading2"
            },
            "blocks": [
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          }
        ]
      },
      {
        "heading": {
          "level": 1,
          "text": "Chapter 19. Serialization Formats",
          "style_id": "Heading1"
        },
        "blocks": [
          {
            "type": "unknown:bookmarkStart"
          }
        ],
        "sections": [
          {
            "heading": {
              "level": 3,
              "text": "19.1 Why Multiple Formats?",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "Different systems require different encodings. UL supports: - S-expressions — default, human-readable. - JSON — widely supported in APIs. - CBOR — binary, compact for networks.",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 3,
              "text": "19.2 Example (S-expr)",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "(assert\n  :event e25\n  :pred own\n  :args { agent (REF alice) theme (REF car-17) }\n  :time { tense present }\n  :conf 1.0\n)",
                "style_id": "SourceCode",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 3,
              "text": "19.3 Example (JSON)",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "{\n  \"event\": \"e25\",\n  \"pred\": \"own\",\n  \"args\": { \"agent\": \"alice\", \"theme\": \"car-17\" },\n  \"time\": { \"tense\": \"present\" },\n  \"conf\": 1.0\n}",
                "style_id": "SourceCode",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 3,
              "text": "19.4 Example (CBOR)",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "Binary compact representation — efficient for IoT devices.",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 3,
              "text": "19.5 Integrity",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "All messages may include a :sig field with SHA-256 hash or digital signature for verification.",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          }
        ]
      },
      {
        "heading": {
          "level": 1,
          "text": "Chapter 20. Error Handling & Repair Protocols",
          "style_id": "Heading1"
        },
        "blocks": [
          {
            "type": "unknown:bookmarkStart"
          }
        ],
        "sections": [
          {
            "heading": {
              "level": 3,
              "text": "20.1 Repair Principle",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "In natural conversation, misunderstandings trigger repair (“What?”). UL formalizes this: - repair = request missing info. - fail = report task not completed.",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 3,
              "text": "20.2 Repair Example",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "(repair\n  :on m2\n  :need unit\n)",
                "style_id": "SourceCode",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 3,
              "text": "20.3 Fail Example",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "(fail\n  :of r2\n  :reason size_limit_exceeded\n)",
                "style_id": "SourceCode",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 3,
              "text": "20.4 Benefits",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "Keeps conversation alive.",
                "style_id": "Compact",
                "numbered": true
              },
              {
                "type": "paragraph",
                "text": "Ensures graceful failure, not silent collapse.",
                "style_id": "Compact",
                "numbered": true
              },
              {
                "type": "paragraph",
                "text": "Machine + human interpretable.",
                "style_id": "Compact",
                "numbered": true
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          }
        ]
      },
      {
        "heading": {
          "level": 1,
          "text": "Chapter 21. Transport & Compression",
          "style_id": "Heading1"
        },
        "blocks": [
          {
            "type": "unknown:bookmarkStart"
          }
        ],
        "sections": [
          {
            "heading": {
              "level": 3,
              "text": "21.1 Transport Agnosticism",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "UL messages can move over: - HTTP/HTTPS - MQTT (IoT) - Email/SMTP - P2P protocols",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 3,
              "text": "21.2 Compression",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "Because UL is structured with repeated tags, gzip/CBOR compression achieves high reduction in size.",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 3,
              "text": "21.3 Streaming",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "Messages can be chunked and streamed with envelope headers preserved.",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          }
        ]
      },
      {
        "heading": {
          "level": 1,
          "text": "Chapter 22. Mapping to Natural Languages",
          "style_id": "Heading1"
        },
        "blocks": [
          {
            "type": "unknown:bookmarkStart"
          }
        ],
        "sections": [
          {
            "heading": {
              "level": 3,
              "text": "22.1 English",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "Direct mapping with surface gloss.",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "paragraph",
                "text": "“Alice owns a car.” → own{agent:Alice, theme:car-1}; TIME[present]; CONF=1.0;",
                "style_id": "BodyText",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 3,
              "text": "22.2 German",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "“Alice besitzt ein Auto.” → same UL core.",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 3,
              "text": "22.3 Mandarin",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "“Alice 有一辆车。” → same UL.",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 3,
              "text": "22.4 Signed Languages",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "Roles map directly: agent, theme, location, etc. Surface gloss can be signed with fixed handshapes.",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          }
        ]
      },
      {
        "heading": {
          "level": 1,
          "text": "Chapter 23. Human–AI Communication Scenarios",
          "style_id": "Heading1"
        },
        "blocks": [
          {
            "type": "unknown:bookmarkStart"
          }
        ],
        "sections": [
          {
            "heading": {
              "level": 3,
              "text": "23.1 Dialogue",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "Human: “Please send the file.” AI:",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "paragraph",
                "text": "(request\n  :event r3\n  :pred send\n  :args { agent (REF human-1) theme (REF file-1) recipient (REF ai-1) }\n)",
                "style_id": "SourceCode",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 3,
              "text": "23.2 Negotiation",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "Human: “By tomorrow?” AI:",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "paragraph",
                "text": "(repair\n  :on r3\n  :need deadline\n)",
                "style_id": "SourceCode",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 3,
              "text": "23.3 Confirmation",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "Human: “Yes, by tomorrow.” AI updates request with deadline.",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          }
        ]
      },
      {
        "heading": {
          "level": 1,
          "text": "Chapter 24. AI–AI Protocol Examples",
          "style_id": "Heading1"
        },
        "blocks": [
          {
            "type": "unknown:bookmarkStart"
          }
        ],
        "sections": [
          {
            "heading": {
              "level": 3,
              "text": "24.1 Sensor Network",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "Sensor → Hub:",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "paragraph",
                "text": "(measure\n  :event m3\n  :pred temperature\n  :args { theme (REF greenhouse-1) }\n  :value 18.7\n  :unit celsius\n  :time { tense present at 2025-09-28T11:00:00Z }\n  :evid sensor\n  :conf 0.99\n)",
                "style_id": "SourceCode",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 3,
              "text": "24.2 Multi-Agent Planning",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "Agent A → Agent B:",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "paragraph",
                "text": "(request\n  :event r4\n  :pred fetch\n  :args { theme (LINK https://example.org/data.csv) }\n  :constraints { format csv size < 10MB }\n  :by 2025-09-29T12:00:00Z\n)",
                "style_id": "SourceCode",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 3,
              "text": "24.3 Distributed Knowledge Graph",
              "style_id": "Heading3"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "Agent C asserts new knowledge:",
                "style_id": "FirstParagraph",
                "numbered": false
              },
              {
                "type": "paragraph",
                "text": "(assert\n  :event e26\n  :pred located_in\n  :args { theme (REF factory-7) location (REF berlin) }\n  :time { tense present }\n  :evid report\n  :conf 0.85\n)",
                "style_id": "SourceCode",
                "numbered": false
              },
              {
                "type": "paragraph",
                "text": "",
                "style_id": null,
                "numbered": false,
                "empty": true
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 2,
              "text": "Part V – Appendices",
              "style_id": "Heading2"
            },
            "blocks": [
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          }
        ]
      },
      {
        "heading": {
          "level": 1,
          "text": "Appendix A. Formal Grammar (EBNF + JSON Schema)",
          "style_id": "Heading1"
        },
        "blocks": [
          {
            "type": "unknown:bookmarkStart"
          }
        ],
        "sections": [
          {
            "heading": {
              "level": 2,
              "text": "EBNF (expanded)",
              "style_id": "Heading2"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "ul-message  = envelope nl core ;\nenvelope    = \"UL/1\" nl \"id:\" uuid nl \"from:\" agent nl \"to:\" agent-list nl \"t:\" iso8601 [ nl \"ctx:\" token ] [ nl \"sig:\" token ] ;\ncore        = { statement } ;\nstatement   = assert | request | measure | compare | repair | fail ;\n\nassert      = \"(\" \"assert\" kvpairs \")\" ;\nrequest     = \"(\" \"request\" kvpairs \")\" ;\nmeasure     = \"(\" \"measure\" kvpairs \")\" ;\ncompare     = \"(\" \"compare\" kvpairs \")\" ;\nrepair      = \"(\" \"repair\" kvpairs \")\" ;\nfail        = \"(\" \"fail\" kvpairs \")\" ;\n\nkvpairs     = { kvpair } ;\nkvpair      = \":\" key value ;\nvalue       = symbol | number | string | sexpr | dict ;\nsexpr       = \"(\" symbol { kvpair } \")\" ;\ndict        = \"{\" { key value } \"}\" ;\n\ntime        = \"{\" \"tense\" tense [ \"at\" timespec | \"interval\" \"{\" \"start\" timespec \"end\" timespec \"}\" ] [ \"aspect\" aspect ] \"}\" ;\ntense       = \"past\" | \"present\" | \"future\" ;\naspect      = \"progressive\" | \"perfect\" ;\nmod-type    = \"epistemic\" | \"deontic\" | \"ability\" ;\nmod-val     = \"must\" | \"may\" | \"can\" | \"likely\" | \"possible\" | \"necessary\" | \"unlikely\" ;\n\nrole        = \"agent\" | \"theme\" | \"patient\" | \"recipient\" | \"source\" | \"goal\" | \"location\" | \"instrument\" | \"beneficiary\" | \"cause\" | \"experiencer\" ;\nevid        = \"obs\" | \"sensor\" | \"report\" | \"model\" | \"rule\" ;\nrelation    = \"equal\" | \"greater\" | \"less\" ;\n\nsymbol      = /[A-Za-z_][A-Za-z0-9_-]*/ ;\nuuid        = /[A-Fa-f0-9-]{8,}/ ;\niso8601     = /[0-9TZ:+-]{10,}/ ;\nkey         = symbol ;\ntoken       = /[^\\s]+/ ;\nnumber      = /-?[0-9]+(\\.[0-9]+)?/ ;\nstring      = /\"[^\"]*\"/ ;",
                "style_id": "SourceCode",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          },
          {
            "heading": {
              "level": 2,
              "text": "JSON Schema (core object)",
              "style_id": "Heading2"
            },
            "blocks": [
              {
                "type": "paragraph",
                "text": "{\n  \"$schema\": \"https://json-schema.org/draft/2020-12/schema\",\n  \"title\": \"UL Core Statement\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"event\": { \"type\": \"string\" },\n    \"pred\":  { \"type\": \"string\" },\n    \"args\":  { \"type\": \"object\", \"additionalProperties\": { \"type\": [\"string\",\"number\",\"object\",\"array\"] } },\n    \"time\":  { \"type\": \"object\" },\n    \"mod\":   { \"type\": \"object\" },\n    \"neg\":   { \"type\": \"boolean\" },\n    \"evid\":  { \"type\": \"string\", \"enum\": [\"obs\",\"sensor\",\"report\",\"model\",\"rule\"] },\n    \"conf\":  { \"type\": \"number\", \"minimum\": 0.0, \"maximum\": 1.0 },\n    \"unit\":  { \"type\": \"string\" },\n    \"notes\": { \"type\": \"string\" },\n    \"link\":  { \"type\": [\"string\",\"null\"] }\n  },\n  \"required\": [\"event\",\"pred\",\"args\"],\n  \"additionalProperties\": true\n}",
                "style_id": "SourceCode",
                "numbered": false
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkEnd"
              },
              {
                "type": "unknown:bookmarkStart"
              }
            ],
            "sections": []
          }
        ]
      },
      {
        "heading": {
          "level": 1,
          "text": "Appendix B. Quick-Reference Cheat Sheet",
          "style_id": "Heading1"
        },
        "blocks": [
          {
            "type": "paragraph",
            "text": "Statement Types - Assertion: (assert …) - Request: (request …) - Measurement: (measure …) - Comparison: (compare …) - Repair: (repair …) - Failure: (fail …)",
            "style_id": "FirstParagraph",
            "numbered": false
          },
          {
            "type": "paragraph",
            "text": "Core Atoms: ENT, REL, TIME, MOD, NEG, EVID, CONF, UNIT, REF, LINK, SCOPE.",
            "style_id": "BodyText",
            "numbered": false
          },
          {
            "type": "paragraph",
            "text": "Core Roles: agent, theme/patient, recipient, source, goal, location, instrument, beneficiary, cause, experiencer.",
            "style_id": "BodyText",
            "numbered": false
          },
          {
            "type": "paragraph",
            "text": "Modality Types: epistemic, deontic, ability. Evidentiality: obs, sensor, report, model, rule. Time: past, present, future; absolute ISO timestamps or intervals. Negation: :neg true with explicit :scope when needed.",
            "style_id": "BodyText",
            "numbered": false
          },
          {
            "type": "unknown:bookmarkEnd"
          },
          {
            "type": "unknown:bookmarkStart"
          }
        ],
        "sections": []
      },
      {
        "heading": {
          "level": 1,
          "text": "Appendix C. Worked Examples",
          "style_id": "Heading1"
        },
        "blocks": [
          {
            "type": "paragraph",
            "text": "English → UL → Gloss",
            "style_id": "FirstParagraph",
            "numbered": false
          },
          {
            "type": "paragraph",
            "text": "“Could you probably send me the latest report by tomorrow? It’s around 5MB.”",
            "style_id": "Compact",
            "numbered": true
          },
          {
            "type": "paragraph",
            "text": "(request\n  :event r12\n  :pred send\n  :args { agent (REF you) theme (REF report-latest) recipient (REF me) }\n  :time { tense future at 2025-09-29T00:00:00Z }\n  :mod  { type deontic val request }\n  :meta { approx_size 5MB }\n  :evid report\n  :conf 0.80\n)",
            "style_id": "SourceCode",
            "numbered": false
          },
          {
            "type": "paragraph",
            "text": "Gloss: send{agent:you, theme:report#latest, to:me}; TIME[future@2025-09-29T00:00Z]; MOD[deontic:request]; SIZE[≈5MB]; EVID[report]; CONF=0.8;",
            "style_id": "FirstParagraph",
            "numbered": false
          },
          {
            "type": "paragraph",
            "text": "“Alice is taller than Bob.”",
            "style_id": "Compact",
            "numbered": true
          },
          {
            "type": "paragraph",
            "text": "(compare\n  :event c1\n  :pred height\n  :args { theme1 (REF alice) theme2 (REF bob) }\n  :relation greater\n  :conf 0.9\n)",
            "style_id": "SourceCode",
            "numbered": false
          },
          {
            "type": "unknown:bookmarkEnd"
          },
          {
            "type": "unknown:bookmarkStart"
          }
        ],
        "sections": []
      },
      {
        "heading": {
          "level": 1,
          "text": "Appendix D. Mini-Dictionary",
          "style_id": "Heading1"
        },
        "blocks": [
          {
            "type": "paragraph",
            "text": "Predicates (sample) be, equal, exist, have, own, give, do, move, make, see, hear, say, ask, measure, compare, cause, allow, require, located_in, part_of, cut, rain, leave, on.",
            "style_id": "FirstParagraph",
            "numbered": false
          },
          {
            "type": "paragraph",
            "text": "Roles agent, theme/patient, recipient, source, goal, location, instrument, beneficiary, cause, experiencer.",
            "style_id": "BodyText",
            "numbered": false
          },
          {
            "type": "paragraph",
            "text": "Modality Values must, may, can, likely, possible, forbidden, certain, unlikely.",
            "style_id": "BodyText",
            "numbered": false
          },
          {
            "type": "paragraph",
            "text": "Evidentiality obs, sensor, report, model, rule.",
            "style_id": "BodyText",
            "numbered": false
          },
          {
            "type": "paragraph",
            "text": "Units m, kg, s, °C, J, W, m², m³, m/s, USD, EUR, mg/dL, mmHg, MB, GB, ms.",
            "style_id": "BodyText",
            "numbered": false
          },
          {
            "type": "unknown:bookmarkEnd"
          },
          {
            "type": "unknown:bookmarkStart"
          }
        ],
        "sections": []
      },
      {
        "heading": {
          "level": 1,
          "text": "Appendix E. Self-Study Drills (with Selected Answers)",
          "style_id": "Heading1"
        },
        "blocks": [
          {
            "type": "paragraph",
            "text": "Beginner - The lamp is on. - Please close the door. - The weight is 10kg.",
            "style_id": "FirstParagraph",
            "numbered": false
          },
          {
            "type": "paragraph",
            "text": "Intermediate - Alice might be in Paris. - Not all cats like milk. - Send the report by tomorrow.",
            "style_id": "BodyText",
            "numbered": false
          },
          {
            "type": "paragraph",
            "text": "Advanced - If Bob doesn’t study, he will fail. - Every researcher who wrote a paper received funding. - It will probably snow next week, according to the forecast.",
            "style_id": "BodyText",
            "numbered": false
          },
          {
            "type": "paragraph",
            "text": "Selected Answers See Chapter 13.4.",
            "style_id": "BodyText",
            "numbered": false
          },
          {
            "type": "unknown:bookmarkEnd"
          },
          {
            "type": "section_break"
          }
        ],
        "sections": []
      }
    ],
    "blocks": [
      {
        "type": "unknown:bookmarkStart"
      }
    ]
  }
}